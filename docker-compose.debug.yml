version: "3.3"

# environment:
#   - SSH_PRIVATE_KEY=${SSH_PRIVATE_KEY}

services:
  # instrument_info:
  #   build: .
  #   image: volatiliy-services
  #   container_name: instrument_info
  #   env_file: docker-compose.env
  #   environment:
  #     DOCKER_BUILDKIT: 1
  #     TRANSPORTER: nats://nats:4222
  #     SERVICES: instrument_info.service.js
  #     SSH_AUTH_SOCK: "${SSH_AUTH_SOCK}"

    # links:
    #   - nats
    # volumes:
    #   - ./:/app
    # depends_on:
    #   - nats

  # cron:
  #   build: .
  #   image: volatiliy-services
  #   container_name: cron
  #   env_file: docker-compose.env
  #   environment:
  #     DOCKER_BUILDKIT: 1
  #     TRANSPORTER: nats://nats:4222
  #     SERVICES: cron.service.js
  #     SSH_AUTH_SOCK: "${SSH_AUTH_SOCK}"
  #   links:
  #     - nats
  #   volumes:
  #     - ./:/app
  #   depends_on:
  #     - nats
  #     - postgresd
  nats:
    image: nats:2
    container_name: nats
    ports:
      - '4222:4222'
    restart: unless-stopped
    command:
      - '-m'
      - '8222'
      - '--debug'
    labels:
      - "traefik.enable=false"
    # networks:
    #   - web

  # nats_exporter:
  #   image: natsio/prometheus-nats-exporter:latest
  #   container_name: nats_exporter
  #   command:
  #     - '-varz'
  #     - http://nats:8222
    # networks:
    #   - web
    # networks:
    #   - internal

  postgresd:
    container_name: postgresd
    image: postgres:12
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - SSH_AUTH_SOCK="${SSH_AUTH_SOCK}"

      # - POSTGRES_HOST=postgresd
      # - POSTGRES_PORT=5432
      # - POSTGRES_DB=volatility_development
    volumes:
      # - /tmp/:/var/run/postgresql/
      # - pgdata1:/var/lib/postgresql/data
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-db.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379"

  index:
    build: .
    image: volatiliy-services
    container_name: index
    env_file: docker-compose.env
    environment:
      DOCKER_BUILDKIT: 1
      AWS_PROFILE: admin
      AWS_REGION: us-east-1
      TRANSPORTER: nats://nats:4222
      SSH_AUTH_SOCK: "${SSH_AUTH_SOCK}"
      POSTGRES_HOST: postgresd
      SERVICES: index.service.js
      LOG_LEVEL: trace
    links:
      - nats
      - postgresd
    volumes:
      - ~/.aws/:/root/.aws/
      - ${SSH_AUTH_SOCK}:${SSH_AUTH_SOCK}
      - ./:/app
    depends_on:
      - ingest

  instrument_info:
    build: .
    image: volatiliy-services
    container_name: instrument_info
    env_file: docker-compose.env
    environment:
      DOCKER_BUILDKIT: 1
      AWS_PROFILE: admin
      AWS_REGION: us-east-1
      TRANSPORTER: nats://nats:4222
      SSH_AUTH_SOCK: "${SSH_AUTH_SOCK}"
      POSTGRES_HOST: postgresd
      SERVICES: instrument_info.service.js
      LOG_LEVEL: trace
    links:
      - nats
    volumes:
      - ~/.aws/:/root/.aws/
      # - ${SSH_AUTH_SOCK}:${SSH_AUTH_SOCK}
      - ./:/app
    depends_on:
      - nats

  ingest:
    build: .
    image: volatiliy-services
    container_name: ingest
    env_file: docker-compose.env
    restart: on-failure
    environment:
      DOCKER_BUILDKIT: 1
      AWS_PROFILE: admin
      AWS_REGION: us-east-1
      TRANSPORTER: nats://nats:4222
      SSH_AUTH_SOCK: "${SSH_AUTH_SOCK}"
      SERVICES: ingest.service.js
      LOG_LEVEL: trace
    links:
      - nats
    volumes:
      - ~/.aws/:/root/.aws/
      - ${SSH_AUTH_SOCK}:${SSH_AUTH_SOCK}
      - ./:/app
    depends_on:
      - nats
      - instrument_info

  ws:
    build:
      context: .
    image: volatiliy-services
    container_name: ws
    env_file: docker-compose.env
    ports:
      - 3000:3000
    environment:
      DOCKER_BUILDKIT: 1
      AWS_PROFILE: admin
      AWS_REGION: us-east-1
      TRANSPORTER: nats://nats:4222
      SSH_AUTH_SOCK: "${SSH_AUTH_SOCK}"
      SERVICES: ws.service.js
    links:
      - nats
    volumes:
      - ~/.aws/:/root/.aws/
      - ${SSH_AUTH_SOCK}:${SSH_AUTH_SOCK}
      - ./:/app
    # networks:
    #   - internal
    #   - web
    depends_on:
      - nats

  wait:
    image: dokku/wait

volumes:
  postgres_data:
