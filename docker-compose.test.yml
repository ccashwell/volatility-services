version: "3.3"

# environment:
#   - SSH_PRIVATE_KEY=${SSH_PRIVATE_KEY}

services:

  nats:
    image: nats:2
    container_name: nats
    ports:
      - '4222:4222'
    restart: unless-stopped
    # command:
    #   - '-m'
    #   - '8222'
    labels:
      - "traefik.enable=false"
    # networks:
    #   - web

  # nats_exporter:
  #   image: natsio/prometheus-nats-exporter:latest
  #   container_name: nats_exporter
  #   command:
  #     - '-varz'
  #     - http://nats:8222
    # networks:
    #   - web
    # networks:
    #   - internal

  postgresd:
    container_name: postgresd
    image: postgres:12
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      # - POSTGRES_HOST=postgresd
      # - POSTGRES_PORT=5432
      # - POSTGRES_DB=volatility_development
    volumes:
      # - /tmp/:/var/run/postgresql/
      # - pgdata1:/var/lib/postgresql/data
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    # networks:
    #   - web
    # networks:
    #   - internal

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379"
    # networks:
    #   - web

  ws:
    build:
      context: .
    image: volatiliy-services
    container_name: ws
    env_file: docker-compose.env
    ports:
      - 3000:3000
    environment:
      DOCKER_BUILDKIT: 1
      # PORT: 3000
      TRANSPORTER: nats://nats:4222
      SSH_AUTH_SOCK: "${SSH_AUTH_SOCK}"
      POSTGRES_HOST: postgresd
    links:
      - nats
      - postgresd
    labels:
      # - "traefik.backend=ws-gw"
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.port=80"
      # - "traefik.port=3000"
      # - "traefik.http.routers.ws.rule=PathPrefix(`/`)"
      # - "traefik.http.routers.ws.entrypoints=websocket"
      # - "traefik.http.routers.ws.rule=Host(`ws.localhost`)"
      - "traefik.web.frontend.rule=Host:vault.domain.com"
      - "traefik.web.port=80"
      - "traefik.ws.frontend.rule=Host:vault.domain.com;Path:/notifications/hub"
      - "traefik.ws.port=3000"
      - "traefik.ws.protocol=ws"
      - "traefik.http.routers.ws.rule=Host(`ws.localhost`) && Path(`/ws`)"
      - "traefik.http.routers.ws.service=ws"
      - "traefik.http.services.ws.loadbalancer.server.port=3000"
      # - traefik.http.routers.ws-gw.tls=true
      # - traefik.http.routers.ws-gw.tls.certresolver=lets-encrypt
      # - "traefik.http.services.ws-gw.loadbalancer.server.url=http://ws-gw/"
      - "traefik.webservice.frontend.entryPoints=http"
      # - "traefik.wss.protocol=ws"
      - "traefik.backend.loadbalancer.sticky=true"
    volumes:
      - ${SSH_AUTH_SOCK}:${SSH_AUTH_SOCK}
      - ./:/app
    # networks:
    #   - internal
    #   - web
    depends_on:
      - nats

# networks:
#   web:
#     external: true
#   internal:
#     external: false

volumes:
  postgres_data:
